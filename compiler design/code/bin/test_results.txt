int max2(int,int);
  Code:
     0: iload_1
     1: iload_2
     2: if_icmple 10
     5: iload_1
     6: ireturn
     7: goto 12
     10: iload_2
     11: ireturn

int max4(int,int,int,int);
  Code:
     0: aload_0
     1: iload_1
     2: iload_2
     3: invokevirtual #0
     6: istore 5
     8: aload_0
     9: iload_3
     10: iload 4
     12: invokevirtual #0
     15: istore 6
     17: aload_0
     18: iload 5
     20: iload 6
     22: invokevirtual #0
     25: ireturn

int fact(int);
  Code:
     0: iconst_1
     1: istore_2
     2: iconst_1
     3: istore_3
     4: iload_2
     5: iload_1
     6: if_icmpge 20
     9: iload_2
     10: iconst_1
     11: iadd
     12: istore_2
     13: iload_3
     14: iload_2
     15: imul
     16: istore_3
     17: goto 4
     20: iload_3
     21: ireturn

int gcd(int,int);
  Code:
     0: iload_1
     1: iload_2
     2: if_icmpeq 24
     5: iload_1
     6: iload_2
     7: if_icmple 17
     10: iload_1
     11: iload_2
     12: isub
     13: istore_1
     14: goto 21
     17: iload_2
     18: iload_1
     19: isub
     20: istore_2
     21: goto 0
     24: iload_1
     25: ireturn

int f91(int);
  Code:
     0: iload_1
     1: bipush 100
     3: if_icmple 14
     6: iload_1
     7: bipush 10
     9: isub
     10: istore_2
     11: goto 29
     14: aload_0
     15: iload_1
     16: bipush 11
     18: iadd
     19: invokevirtual #4
     22: istore_3
     23: aload_0
     24: iload_3
     25: invokevirtual #4
     28: istore_2
     29: iload_2
     30: ireturn

int friends(int,int);
  Code:
     0: iconst_0
     1: istore 4
     3: iconst_1
     4: istore_3
     5: iload_3
     6: iload_1
     7: if_icmpgt 32
     10: iload_1
     11: iload_3
     12: idiv
     13: iload_3
     14: imul
     15: iload_1
     16: if_icmpne 25
     19: iload 4
     21: iload_3
     22: iadd
     23: istore 4
     25: iload_3
     26: iconst_1
     27: iadd
     28: istore_3
     29: goto 5
     32: iload 4
     34: iprint
     35: iload_1
     36: iprint
     37: aload_0
     38: iload 4
     40: iload_1
     41: invokevirtual #3
     44: istore 6
     46: iload 4
     48: iload 6
     50: idiv
     51: istore 4
     53: iload_1
     54: iload 6
     56: idiv
     57: istore 5
     59: iconst_0
     60: istore 7
     62: iconst_1
     63: istore_3
     64: iload_3
     65: iload_2
     66: if_icmpgt 91
     69: iload_2
     70: iload_3
     71: idiv
     72: iload_3
     73: imul
     74: iload_2
     75: if_icmpne 84
     78: iload 7
     80: iload_3
     81: iadd
     82: istore 7
     84: iload_3
     85: iconst_1
     86: iadd
     87: istore_3
     88: goto 64
     91: iload 7
     93: iprint
     94: iload_2
     95: iprint
     96: aload_0
     97: iload 7
     99: iload_2
     100: invokevirtual #3
     103: istore 9
     105: iload 7
     107: iload 9
     109: idiv
     110: istore 7
     112: iload_2
     113: iload 9
     115: idiv
     116: istore 8
     118: iload 4
     120: iload 7
     122: if_icmpne 134
     125: iload 5
     127: iload 8
     129: if_icmpne 134
     132: iconst_1
     133: ireturn
     134: iconst_0
     135: ireturn

int isqrt(int);
  Code:
     0: iconst_1
     1: istore 4
     3: iload 4
     5: iload 4
     7: imul
     8: iload_1
     9: if_icmpge 21
     12: iload 4
     14: iconst_1
     15: iadd
     16: istore 4
     18: goto 3
     21: iload 4
     23: iconst_1
     24: isub
     25: istore_3
     26: iload_1
     27: iload_3
     28: iload_3
     29: imul
     30: isub
     31: iload 4
     33: iload 4
     35: imul
     36: iload_1
     37: isub
     38: if_icmpge 46
     41: iload_3
     42: istore_2
     43: goto 49
     46: iload 4
     48: istore_2
     49: iload_2
     50: ireturn

int test(int,int,int);
  Code:
     0: iload_3
     1: iload_2
     2: if_icmple 10
     5: iconst_1
     6: ireturn
     7: goto 34
     10: iload_1
     11: iload_3
     12: idiv
     13: iload_3
     14: imul
     15: iload_1
     16: if_icmpne 24
     19: iconst_0
     20: ireturn
     21: goto 34
     24: aload_0
     25: iload_1
     26: iload_2
     27: iload_3
     28: iconst_1
     29: iadd
     30: invokevirtual #7
     33: ireturn

int isprime(int);
  Code:
     0: aload_0
     1: iload_1
     2: invokevirtual #6
     5: istore_2
     6: aload_0
     7: iload_1
     8: iload_2
     9: iconst_2
     10: invokevirtual #7
     13: ireturn

int primes(int);
  Code:
     0: iconst_2
     1: istore_2
     2: iload_2
     3: iload_1
     4: if_icmpgt 27
     7: aload_0
     8: iload_2
     9: invokevirtual #8
     12: iconst_1
     13: if_icmpne 20
     16: iload_2
     17: istore_3
     18: iload_3
     19: iprint
     20: iload_2
     21: iconst_1
     22: iadd
     23: istore_2
     24: goto 2
     27: iload_3
     28: ireturn

 Defined functions:

max2: 0
max4: 1
fact: 2
gcd: 3
f91: 4
friends: 5
isqrt: 6
test: 7
isprime: 8
primes: 9

Starting TinyPL interpreter, enter 'exit;' to end session ...

Enter a call, end with semi-colon: max2(10, 20);

top_level_call_1
  Code:
     0: aload_0
     1: bipush 10
     3: bipush 20
     5: invokevirtual #0
     8: ireturn

answer = 20
Enter a call, end with semi-colon: max4(2,3,4,1);

top_level_call_2
  Code:
     0: aload_0
     1: iconst_2
     2: iconst_3
     3: iconst_4
     4: iconst_1
     5: invokevirtual #1
     8: ireturn

answer = 4
Enter a call, end with semi-colon: gcd(55,66);

top_level_call_3
  Code:
     0: aload_0
     1: bipush 55
     3: bipush 66
     5: invokevirtual #3
     8: ireturn

answer = 11
Enter a call, end with semi-colon: f91(5);

top_level_call_4
  Code:
     0: aload_0
     1: iconst_5
     2: invokevirtual #4
     5: ireturn

answer = 91
Enter a call, end with semi-colon: friends(30,140);

top_level_call_5
  Code:
     0: aload_0
     1: bipush 30
     3: sipush 140
     6: invokevirtual #5
     9: ireturn
72
30
336
140

answer = 1
Enter a call, end with semi-colon: isqrt(57);

top_level_call_6
  Code:
     0: aload_0
     1: bipush 57
     3: invokevirtual #6
     6: ireturn

answer = 8
Enter a call, end with semi-colon: isprime(97);

top_level_call_8
  Code:
     0: aload_0
     1: bipush 97
     3: invokevirtual #8
     6: ireturn

answer = 1
Enter a call, end with semi-colon: primes(20);

top_level_call_9
  Code:
     0: aload_0
     1: bipush 20
     3: invokevirtual #9
     6: ireturn
2
3
5
7
11
13
17
19

answer = 19
Enter a call, end with semi-colon: exit;

... good bye, thanks for using Tiny PL!
